{% block pagination %}
    {% set form = pagination.formView %}
    {% set resetKey = pagination.inputKeys.reset %}
    {% set input = pagination.input %}
    {% set showFiltersCookieName = 'paginationShowFilters_' ~ pagination.currentRoute %}
    {% set gridStyles = gridStyles is defined ? gridStyles : {} %}
    {% set gridStyles = {
        searchBlock: 'col-md-9',
        search: 'col-md-6 col-xl-4',
        buttons: 'col-md-6 col-xl-4',
        sortBlock: 'col-md-offset-9 col-md-3',
        sorts: 'col-md-7 col-xl-8',
        pageSizes: 'col-md-5 col-xl-4',
        filter: 'col-md-4 col-xl-3'
    }|merge(gridStyles) %}
    {% set idListForBindOnChangeEvent = '#' ~ pagination.filterForm|map(f => f.vars.id)
        |merge(pagination.SortForm.vars.id is defined ? [pagination.SortForm.vars.id] : [])
        |merge(pagination.pageSizeForm.vars.id is defined ? [pagination.pageSizeForm.vars.id] : [])
        |join(',#')
    %}
    {% set paginatorTranslationDomain = pagination.getOption('paginatorTranslationDomain') %}

    {{ form_start(form) }}

    <div class="row mb-1 mb-md-3">
        <div class="{{ gridStyles.searchBlock }}">
            <div class="row">
            {% block pagination_searches %}
                {{ nadia_paginator_searches(pagination, {attributes: {class: gridStyles.search ~ ' search'}}) }}
            {% endblock pagination_searches %}

            {% block pagination_buttons %}
                <div class="{{ gridStyles.buttons }} {% if hide is defined %}d-md-none my-3 row{% else %}d-none d-md-block{% endif %}">
                {% if hide is not defined %}
                    <div>&nbsp;</div>
                {% endif %}
                    <div>
                    {% block pagination_button_search %}
                        {% if pagination.builder.search %}
                        <button class="btn btn-primary">
                            {% trans from paginatorTranslationDomain %}Search{% endtrans %}
                        </button>
                        {% endif %}
                    {% endblock pagination_button_search %}

                    {% block pagination_button_filters %}
                        {% if pagination.builder.filter %}
                        <button type="button" class="btn btn-info btn-display-filters">
                            {% trans from paginatorTranslationDomain %}Filters{% endtrans %}
                            <span class="filter-open-close-symbol">
                                {% if input.filter is empty %}&#9660;{% else %}&#9650;{% endif %}
                            </span>
                        </button>
                        {% endif %}
                    {% endblock pagination_button_filters %}

                    {% block pagination_button_reset %}
                        <input type="submit" class="btn btn-secondary" name="{{ resetKey }}"
                               value="{% trans from paginatorTranslationDomain %}Clear{% endtrans %}" />
                    {% endblock pagination_button_reset %}
                    </div>
                </div>
            {% endblock pagination_buttons %}
            </div>
        </div>

        <div class="{{ gridStyles.sortBlock }} d-none d-md-block">
            <div class="row">
            {% block pagination_sorts %}
                <div class="{{ gridStyles.sorts }}">
                    {{ nadia_paginator_sorts(pagination) }}
                </div>
            {% endblock pagination_sorts %}
            {% block pagination_page_sizes %}
                <div class="{{ gridStyles.pageSizes }}">
                    {{ nadia_paginator_page_sizes(pagination) }}
                </div>
            {% endblock pagination_page_sizes %}
            </div>
        </div>
    </div>

    {% block pagination_filters %}
    <div class="row mb-0 mb-md-3 {% if input.filter is empty %}d-none{% endif %}" id="filters">
        {{ nadia_paginator_filters(pagination, {
            attributes: {class: gridStyles.filter ~ ' mb-1 filter'},
            excludes: excludeFilterColumns|default([]),
            includes: includeFilterColumns|default([])
        }) }}
    </div>
    {% endblock pagination_filters %}

    {% with {hide: true} %}
        {{ block('pagination_buttons') }}
    {% endwith %}

    {% block pagination_filters_javascript %}
    <script type="text/javascript">
        if (document.cookie.split(';').filter(function (item) {
            return item.trim().indexOf('{{ showFiltersCookieName }}=1') >= 0;
        }).length) {
            document.getElementById('filters').classList.remove('d-none');
            document.querySelectorAll('.filter-open-close-symbol').forEach(function (symbol) {
                symbol.innerHTML = '&#9660;';
            });
        }

        document.querySelectorAll('.btn-display-filters').forEach(function (button) {
            button.addEventListener('click', function () {
                var filters = document.getElementById('filters');
                var symbols = document.querySelectorAll('.filter-open-close-symbol');

                if (filters.classList.contains('d-none')) {
                    filters.classList.remove('d-none');
                    symbols.forEach(function (symbol) {
                        symbol.innerHTML = '&#9660;';
                    });
                    document.cookie = '{{ showFiltersCookieName }}=1';
                } else {
                    filters.classList.add('d-none');
                    symbols.forEach(function (symbol) {
                        symbol.innerHTML = '&#9650;';
                    });
                    document.cookie = '{{ showFiltersCookieName }}=';
                }
            })
        });

        document.querySelectorAll('{{ idListForBindOnChangeEvent }}'.replace(/:/g, '\\:')).forEach(function (elm) {
            elm.addEventListener('change', function () {
                document.getElementById('{{ form.vars.attr.id }}').submit();
            });
        });
    </script>
    {% endblock pagination_filters_javascript %}


    <div class="table-responsive">
    {% block table_contents %}
        <!-- Example table contents -->
        <table class="table">
            <thead>
            <tr>
                <th>Demo</th>
                <th>Demo</th>
                <th>Demo</th>
                <th>Demo</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <td>Demo</td>
                <td>Demo</td>
                <td>Demo</td>
                <td>Demo</td>
            </tr>
            <tr>
                <td>Demo</td>
                <td>Demo</td>
                <td>Demo</td>
                <td>Demo</td>
            </tr>
            <tr>
                <td>Demo</td>
                <td>Demo</td>
                <td>Demo</td>
                <td>Demo</td>
            </tr>
            </tbody>
        </table>
    {% endblock table_contents %}
    </div>

    <div class="d-flex justify-content-center">
    {% block pagination_pages %}
        {{ nadia_paginator_pages(pagination) }}
    {% endblock pagination_pages %}
    </div>

    {{ form_end(form) }}
{% endblock pagination %}
